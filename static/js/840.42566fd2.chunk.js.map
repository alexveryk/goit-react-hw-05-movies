{"version":3,"file":"static/js/840.42566fd2.chunk.js","mappings":"oRAGaA,EAAeC,EAAAA,EAAAA,IAAH,wDAKZC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,iL,SC2DvB,EA7DqB,WAAO,IAAD,IACzB,GAA8BG,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAE3CC,GAAaC,EAAAA,EAAAA,MAAbD,SAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdZ,GAAW,GAFG,UAGSa,EAAAA,EAAAA,IAASJ,GAHlB,OAGRK,EAHQ,OAMdZ,EAASY,EAASC,MANJ,gDAQdC,QAAQC,IAAR,MARc,yBAUdjB,GAAW,GAVG,4EAAH,qDAcfY,GACD,GAAE,CAACH,KAGF,2BACGV,IAAW,uCACZ,SAACH,EAAD,CAAYsB,GAAIb,EAAYc,QAA5B,sBACA,UAACzB,EAAD,YACE,0BACE,gBACE0B,IAAG,yCAAoCnB,EAAMoB,aAC7CC,IAAI,QAGR,4BACE,kCAAQrB,EAAMsB,mBACd,6CAAmBtB,EAAMuB,eACzB,sCACA,iCAAOvB,EAAMwB,aACb,oCACA,wBAGJ,2BACE,yBACE,SAAC,KAAD,CAAMP,GAAG,UAAT,wBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAIJ,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 8px;\n  font-size: 16px;\n  background-color: grey;\n  border-radius: 4px;\n  text-decoration: none;\n  margin-bottom: 8px;\n  color: white;\n`;\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { getMovie } from 'components/API/api';\nimport { MovieWrapper, StyledLink } from './MovieDetails.styled';\n// import { Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState({});\n\n  const location = useLocation();\n  const backLinkref = useRef(location.state?.from ?? '/movies');\n\n  const { movieiId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await getMovie(movieiId);\n\n        // console.log(response.data);\n        setMovie(response.data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieiId]);\n\n  return (\n    <div>\n      {loading && <p>Loading...</p>}\n      <StyledLink to={backLinkref.current}>Go back</StyledLink>\n      <MovieWrapper>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n            alt=\"\"\n          />\n        </div>\n        <div>\n          <h1>{`${movie.original_title}`}</h1>\n          <p>{`User score: ${movie.popularity}`}</p>\n          <h2>Overview</h2>\n          <p>{`${movie.overview}`}</p>\n          <h3>Genres</h3>\n          <p></p>\n        </div>\n      </MovieWrapper>\n      <ul>\n        <li>\n          <Link to=\"credits\">credits</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">reviews</Link>\n        </li>\n      </ul>\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieWrapper","styled","StyledLink","Link","useState","loading","setLoading","movie","setMovie","location","useLocation","backLinkref","useRef","state","from","movieiId","useParams","useEffect","fetchData","getMovie","response","data","console","log","to","current","src","poster_path","alt","original_title","popularity","overview"],"sourceRoot":""}