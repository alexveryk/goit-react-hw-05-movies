{"version":3,"file":"static/js/158.dad178d5.chunk.js","mappings":"4RAGaA,EAAOC,EAAAA,EAAAA,GAAH,qDAKJC,EAAWD,EAAAA,EAAAA,GAAH,iKASRE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,kDAIVI,EAAOJ,EAAAA,EAAAA,KAAH,gDAIJK,EAAYL,EAAAA,EAAAA,MAAH,2GAOTM,EAAMN,EAAAA,EAAAA,OAAH,qG,SC2ChB,EA9De,WACb,OAA8BO,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,IAArC,eAAOM,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQN,EAAaO,IAAI,SAkC/B,OAvBAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAS,mCAAG,oGAEdX,GAAW,GAFG,UAGSY,EAAAA,EAAAA,IAAaJ,GAHtB,WAGRK,EAHQ,QAKAC,KAAKC,QALL,uBAMZC,QAAQC,IAAI,iBANA,0BASdZ,EAAUQ,EAASC,KAAKC,SATV,kDAWdC,QAAQC,IAAR,MAXc,yBAadjB,GAAW,GAbG,6EAAH,qDAgBfW,GAjBC,CAkBF,GAAE,CAACH,KAGF,4BACE,UAACb,EAAD,CAAMuB,SAlCW,SAAAC,GACnBA,EAAMC,iBAENf,EAAU,IAEVF,EAAgB,CAAEK,MAAOW,EAAME,OAAOC,OAAOC,QAC7CJ,EAAME,OAAOG,OACd,EA2BG,WACE,SAAC5B,EAAD,CAAW6B,KAAK,OAAOC,KAAK,YAC5B,SAAC7B,EAAD,CAAK4B,KAAK,SAAV,uBAED1B,IAAW,sCACX4B,QAAQnB,KACP,SAAClB,EAAD,UACGc,EAAOwB,KAAI,SAAAC,GAAK,OACf,SAACrC,EAAD,WACE,SAACC,EAAD,CAAYqC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAM3B,GAAtD,SACGuB,EAAMK,SAFIL,EAAME,GADN,QAW1B,C","sources":["pages/Movies.styled.js","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  border-radius: 4px;\n  background-color: #ffa50045;\n  list-style: none;\n  padding: 12px;\n  font-size: 20px;\n  margin-bottom: 8px;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Form = styled.form`\n  margin-bottom: 16px;\n`;\n\nexport const InputForm = styled.input`\n  padding: 8px;\n  border-radius: 4px;\n  margin-right: 16px;\n  font-size: 16px;\n`;\n\nexport const Btn = styled.button`\n  border: none;\n  padding: 8px;\n  font-size: 18px;\n  border-radius: 4px;\n`;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMovies } from 'components/API/api';\nimport { useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\nimport {\n  List,\n  ListItem,\n  StyledLink,\n  Form,\n  InputForm,\n  Btn,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n\n    setMovies([]);\n\n    setSearchParams({ query: event.target.search.value });\n    event.target.reset();\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await searchMovies(query);\n\n        if (!response.data.results) {\n          console.log('nothing found');\n          return;\n        }\n        setMovies(response.data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [query]);\n\n  return (\n    <div>\n      <Form onSubmit={hendleSubmit}>\n        <InputForm type=\"text\" name=\"search\" />\n        <Btn type=\"submit\">Search</Btn>\n      </Form>\n      {loading && <p>Loading...</p>}\n      {Boolean(query) && (\n        <List>\n          {movies.map(movie => (\n            <ListItem key={movie.id}>\n              <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </StyledLink>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","ListItem","StyledLink","Link","Form","InputForm","Btn","useState","loading","setLoading","useSearchParams","searchParams","setSearchParams","movies","setMovies","location","useLocation","query","get","useEffect","fetchData","searchMovies","response","data","results","console","log","onSubmit","event","preventDefault","target","search","value","reset","type","name","Boolean","map","movie","to","id","state","from","title"],"sourceRoot":""}